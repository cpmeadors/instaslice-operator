apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "inference.redhat.com/v1alpha1",
          "kind": "DASOperator",
          "metadata": {
            "name": "cluster",
            "namespace": "das-operator"
          },
          "spec": {
            "logLevel": "Normal",
            "managementState": "Managed",
            "operatorLogLevel": "Normal"
          }
        }
      ]
    capabilities: Basic Install
    categories: Drivers and plugins
    containerImage: quay.io/redhat-user-workloads/dynamicacceleratorsl-tenant/instaslice-operator-next:latest
    createdAt: "2025-08-13T12:06:16Z"
    description: Dynamic Accelerator Slicer works with GPU operator to create mig
      slices on demand
    features.operators.openshift.io/cnf: "false"
    features.operators.openshift.io/cni: "false"
    features.operators.openshift.io/csi: "false"
    features.operators.openshift.io/disconnected: "false"
    features.operators.openshift.io/fips-compliant: "false"
    features.operators.openshift.io/proxy-aware: "false"
    features.operators.openshift.io/tls-profiles: "false"
    features.operators.openshift.io/token-auth-aws: "false"
    features.operators.openshift.io/token-auth-azure: "false"
    features.operators.openshift.io/token-auth-gcp: "false"
    operatorframework.io/suggested-namespace: das-operator
    operators.openshift.io/valid-subscription: '["OpenShift Kubernetes Engine", "OpenShift
      Container Platform", "OpenShift Platform Plus"]'
    operators.operatorframework.io/builder: operator-sdk-v1.41.1
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v4
    repository: https://github.com/openshift/instaslice-operator
    support: https://github.com/openshift/instaslice-operator/issues
  name: das-operator.v0.1.0
  namespace: das-operator
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: DASOperator
      name: dasoperators.inference.redhat.com
      version: v1alpha1
    - kind: AllocationClaim
      name: allocationclaims.inference.redhat.com
      version: v1alpha1
    - kind: NodeAccelerator
      name: nodeaccelerators.inference.redhat.com
      version: v1alpha1
  description: "### Introduction\nDynamic Accelerator Slicer uses stable APIs and
    works with GPU operator to create mig slices on demand.\n\n### Prerequisites\n\n1.
    Install the [NVIDIA GPU drivers and CUDA toolkit](https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#driver-installation)
    on the host.\n2. Install the [NVIDIA Container Toolkit (CTK)](https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html).\n3.
    Configure the NVIDIA Container Runtime as the default Docker runtime:\n      `sudo
    nvidia-ctk runtime configure --runtime=docker --set-as-default`\n4. Restart Docker
    to apply the changes:\n      `sudo systemctl restart docker`\n5. Configure the
    NVIDIA Container Runtime to use volume mounts to select devices to inject into
    a container:\n      `sudo nvidia-ctk config --set accept-nvidia-visible-devices-as-volume-mounts=true
    --in-place`\n      This sets accept-nvidia-visible-devices-as-volume-mounts=true
    in the /etc/nvidia-container-runtime/config.toml file\n6. Enable MIG on the GPU\n
    \     Check if MIG is enabled on the host GPU - look for Enabled in the third
    row of the nvidia GPU table, while running `nvidia-smi`\n7. Create symlink in
    the control-plane container\n      `docker exec -ti kind-control-plane ln -s /sbin/ldconfig
    /sbin/ldconfig.real`\n8. Unmount the nvidia devices in the control-plane container\n
    \     `docker exec -ti kind-control-plane umount -R /proc/driver/nvidia`\n9. Install
    the GPU Operator\n      `helm upgrade --install --wait gpu-operator -n gpu-operator
    --create-namespace nvidia/gpu-operator \\\n        --set mig.strategy=mixed \\\n
    \       --set cdi.enabled=true \\\n        --set migManager.enabled=false \\\n
    \       --set migManager.config.default=\"\"`\n10. Deploy cert manager\n      `kubectl
    apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.15.3/cert-manager.yaml`\n
    \     \n### API Backward Compatibility\n**NOTE:**  Until Operator supports **seamless
    upgrades**, a new version of\nthe operator may introduce a change that is **NOT**
    backwards compatible with\nthe previous version. Thus, to upgrade the operator,
    uninstall the already\ninstalled version completely (including CRDs) and install
    the new version.\nFor example to upgrade from 0.1.0 to 0.2.0, you must uninstall
    `0.1.0` by\nfollowing [uninstall operator section](https://github.com/openshift/instaslice-operator)\nand
    install the new version.\n\nChanges to patch version (major.minor.patch) indicates
    that no breaking changes\nare introduced, thus upgrade can be done without uninstalling
    and reinstalling\nthe operator.\n\n### Why Dynamic Accelerator Slicer\n\nPartitionable
    accelerators provided by vendors need partition to be created at node boot-time
    or to change partitions one would have to evict all the workloads at the node
    level to create new set of partitions.\n\nDynamic Accelerator Slicer will help
    if:\n\n- user does not know all the accelerators partitions needed a priori on
    every node on the cluster\n\n- user partition requirements change at the workload
    level rather than the node level\n\n- user does not want to learn or use new API
    to request accelerators slices\n\n- user prefers to use stable device plugins
    APIs for creating partitions\n\n###Features Overview\n\n- Integration with Kubernetes
    [quota management](https://github.com/openshift/instaslice-operator/blob/main/docs/instaslice_kube_quota_int.md)\n\n-
    Integration with project [Kueue](https://github.com/openshift/instaslice-operator/blob/main/docs/kueue.md)\n\n-
    [Emulator](https://github.com/openshift/instaslice-operator/blob/main/docs/emulator.md)
    mode to run test Dynamic Accelerator Slicer firstfit placement strategy\n\n- Integration
    with vLLM, Kserve, [Deployments](https://github.com/openshift/instaslice-operator/blob/main/samples/vllm_deployment.yaml),
    [Jobs](https://github.com/openshift/instaslice-operator/blob/main/samples/vllm_job.yaml),
    and [Statefulsets](https://github.com/openshift/instaslice-operator/blob/main/samples/vllm_statefulset.yaml)\n\n###
    Documentation\nDocumentation and installation guide can be found below:\n  * [Installation
    Guide](https://github.com/openshift/instaslice-operator)\n  * [Dynamic Accelerator
    Slicer Operator](https://github.com/openshift/instaslice-operator/blob/main/README.md)\n\n###
    License\ndas-operator is licensed under the Apache 2.0 license"
  displayName: Dynamic Accelerator Slicer
  icon:
  - base64data: PHN2ZyBpZD0iTGF5ZXJfMSIgZGF0YS1uYW1lPSJMYXllciAxIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxOTIgMTQ1Ij48ZGVmcz48c3R5bGU+LmNscy0xe2ZpbGw6I2UwMDt9PC9zdHlsZT48L2RlZnM+PHRpdGxlPlJlZEhhdC1Mb2dvLUhhdC1Db2xvcjwvdGl0bGU+PHBhdGggZD0iTTE1Ny43Nyw2Mi42MWExNCwxNCwwLDAsMSwuMzEsMy40MmMwLDE0Ljg4LTE4LjEsMTcuNDYtMzAuNjEsMTcuNDZDNzguODMsODMuNDksNDIuNTMsNTMuMjYsNDIuNTMsNDRhNi40Myw2LjQzLDAsMCwxLC4yMi0xLjk0bC0zLjY2LDkuMDZhMTguNDUsMTguNDUsMCwwLDAtMS41MSw3LjMzYzAsMTguMTEsNDEsNDUuNDgsODcuNzQsNDUuNDgsMjAuNjksMCwzNi40My03Ljc2LDM2LjQzLTIxLjc3LDAtMS4wOCwwLTEuOTQtMS43My0xMC4xM1oiLz48cGF0aCBjbGFzcz0iY2xzLTEiIGQ9Ik0xMjcuNDcsODMuNDljMTIuNTEsMCwzMC42MS0yLjU4LDMwLjYxLTE3LjQ2YTE0LDE0LDAsMCwwLS4zMS0zLjQybC03LjQ1LTMyLjM2Yy0xLjcyLTcuMTItMy4yMy0xMC4zNS0xNS43My0xNi42QzEyNC44OSw4LjY5LDEwMy43Ni41LDk3LjUxLjUsOTEuNjkuNSw5MCw4LDgzLjA2LDhjLTYuNjgsMC0xMS42NC01LjYtMTcuODktNS42LTYsMC05LjkxLDQuMDktMTIuOTMsMTIuNSwwLDAtOC40MSwyMy43Mi05LjQ5LDI3LjE2QTYuNDMsNi40MywwLDAsMCw0Mi41Myw0NGMwLDkuMjIsMzYuMywzOS40NSw4NC45NCwzOS40NU0xNjAsNzIuMDdjMS43Myw4LjE5LDEuNzMsOS4wNSwxLjczLDEwLjEzLDAsMTQtMTUuNzQsMjEuNzctMzYuNDMsMjEuNzdDNzguNTQsMTA0LDM3LjU4LDc2LjYsMzcuNTgsNTguNDlhMTguNDUsMTguNDUsMCwwLDEsMS41MS03LjMzQzIyLjI3LDUyLC41LDU1LC41LDc0LjIyYzAsMzEuNDgsNzQuNTksNzAuMjgsMTMzLjY1LDcwLjI4LDQ1LjI4LDAsNTYuNy0yMC40OCw1Ni43LTM2LjY1LDAtMTIuNzItMTEtMjcuMTYtMzAuODMtMzUuNzgiLz48L3N2Zz4=
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - inference.redhat.com
          resources:
          - nodeaccelerators
          - nodeaccelerators/status
          - nodeaccelerators/finalizers
          - dasoperators
          - dasoperators/status
          - dasoperators/finalizers
          - allocationclaims
          - allocationclaims/status
          - allocationclaims/finalizers
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - storage.k8s.io
          resources:
          - csistoragecapacities
          - csidrivers
          - csinodes
          - storageclasses
          - volumeattachments
          verbs:
          - create
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - nodes
          - persistentvolumeclaims
          - persistentvolumes
          - replicationcontrollers
          - pods/binding
          - pods/status
          verbs:
          - get
          - list
          - create
          - watch
          - update
          - patch
        - apiGroups:
          - apps
          resources:
          - daemonsets
          - deployments
          - replicasets
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          - clusterrolebindings
          - roles
          - rolebindings
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - admissionregistration.k8s.io
          resources:
          - validatingwebhookconfigurations
          - mutatingwebhookconfigurations
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          - configmaps
          - namespaces
          - secrets
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - config.openshift.io
          resources:
          - infrastructures
          verbs:
          - get
        - apiGroups:
          - cert-manager.io
          resources:
          - certificates
          - issuers
          verbs:
          - create
          - get
          - list
          - patch
          - update
        - apiGroups:
          - nvidia.com
          resources:
          - clusterpolicies
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - events.k8s.io
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - create
          - update
          - patch
          - list
          - update
          - watch
        serviceAccountName: das-operator
      deployments:
      - name: das-operator
        spec:
          replicas: 2
          selector:
            matchLabels:
              app: das-operator
          strategy: {}
          template:
            metadata:
              labels:
                app: das-operator
            spec:
              affinity:
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchLabels:
                          app: das-operator
                      topologyKey: kubernetes.io/hostname
                    weight: 100
              containers:
              - args:
                - operator
                command:
                - /usr/bin/das-operator
                env:
                - name: OPERATOR_NAME
                  value: das-operator
                - name: RELATED_IMAGE_DAEMONSET_IMAGE
                  value: quay.io/redhat-user-workloads/dynamicacceleratorsl-tenant/instaslice-daemonset-next:latest
                - name: RELATED_IMAGE_WEBHOOK_IMAGE
                  value: quay.io/redhat-user-workloads/dynamicacceleratorsl-tenant/instaslice-webhook-next:latest
                - name: RELATED_IMAGE_SCHEDULER_IMAGE
                  value: quay.io/redhat-user-workloads/dynamicacceleratorsl-tenant/instaslice-scheduler-next:latest
                image: quay.io/redhat-user-workloads/dynamicacceleratorsl-tenant/instaslice-operator-next:latest
                imagePullPolicy: Always
                name: instaslice-operator
                ports:
                - containerPort: 60000
                  name: metrics
                resources: {}
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                  readOnlyRootFilesystem: true
                volumeMounts:
                - mountPath: /tmp
                  name: tmp
              securityContext:
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              serviceAccountName: das-operator
              volumes:
              - emptyDir: {}
                name: tmp
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        serviceAccountName: das-operator
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - GPU Slicing
  - MIG
  links:
  - name: Dynamic Accelerator Slicer Operator
    url: https://github.com/openshift/instaslice-operator
  maintainers:
  - email: amalvank@redhat.com
    name: Abhishek Malvankar
  - email: cmeadors@redhat.com
    name: Cameron Meadors
  - email: harpatil@redhat.com
    name: Harshal Patil
  - email: kehannon@redhat.com
    name: Kevin Hannon
  - email: mmunirab@redhat.com
    name: Mohammed Abdi
  - email: mpatel@redhat.com
    name: Mrunal Patel
  - email: tardieu@us.ibm.com
    name: Olivier Tardieu
  - email: rphillip@redhat.com
    name: Ryan Phillips
  - email: svanka@redhat.com
    name: Sai Ramesh Vanka
  - email: vemporop@redhat.com
    name: Vitaliy Emporopulo
  maturity: alpha
  minKubeVersion: 1.16.0
  provider:
    name: Red Hat
    url: https://github.com/openshift/instaslice-operator
  relatedImages:
  - image: quay.io/redhat-user-workloads/dynamicacceleratorsl-tenant/instaslice-daemonset-next:latest
    name: daemonset-image
  - image: quay.io/redhat-user-workloads/dynamicacceleratorsl-tenant/instaslice-webhook-next:latest
    name: webhook-image
  - image: quay.io/redhat-user-workloads/dynamicacceleratorsl-tenant/instaslice-scheduler-next:latest
    name: scheduler-image
  version: 0.1.0
